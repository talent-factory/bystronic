[project]
name = "bystronic"
version = "0.1.0"
description = "Python Grundkurs fÃ¼r Bystronic-Entwickler mit Fokus auf Datenanalyse"
readme = "README.md"
requires-python = ">=3.13.1"
dependencies = [
    "jupyter>=1.1.1",
    "numpy>=1.26.0",
    "pandas>=2.1.0",
    "matplotlib>=3.8.0",
    "seaborn>=0.13.0",
    "plotly>=5.17.0",
    "scipy>=1.16.1",
    "streamlit>=1.28.0",
    "pyside6>=6.6.0",
    "openpyxl>=3.1.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "black>=23.0.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "mypy>=1.7.0",
]

ui = [
    "streamlit>=1.28.0",
    "PySide6>=6.6.0",
    "openpyxl>=3.1.0",
    "plotly>=5.17.0",
    "dash>=2.14.0",
]

test = [
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.12.0",
    "pytest-qt>=4.2.0",
    "psutil>=5.9.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "UP031", # Use format specifiers instead of percent format (keep for educational purposes)
    "UP032", # Use f-string instead of format call (keep for educational purposes)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"**/tests/**/*" = ["S101"]
"**/beispiele/**/*" = ["UP031", "UP032"]  # Allow old-style formatting for educational examples

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[dependency-groups]
dev = [
    "matplotlib>=3.10.6",
    "numpy>=2.3.2",
    "pandas>=2.3.2",
    "plotly>=6.3.0",
    "pre-commit>=4.3.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "seaborn>=0.13.2",
]
